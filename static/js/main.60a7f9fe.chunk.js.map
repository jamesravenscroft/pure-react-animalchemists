{"version":3,"sources":["styles.module.css","jpgs/RedPanda.jpg","jpgs/Sloth.jpg","jpgs/FennecFox.jpg","jpgs/HoneyBadger.jpg","jpgs/Pangolin.jpg","jpgs/pic4767592.jpg","jpgs sync /^/.*/.jpg$","jpgs/IngredientBacks.jpg","jpgs/SpellBacks.jpg","jpgs/49.jpg","jpgs/Awaken.jpg","jpgs/Bone - Copy copy.jpg","jpgs/Bone copy.jpg","jpgs/Bone.jpg","jpgs/Bone0.jpg","jpgs/Bone1.jpg","jpgs/Bone2.jpg","jpgs/Bone3.jpg","jpgs/Bone4.jpg","jpgs/Bone5.jpg","jpgs/Bone6.jpg","jpgs/Bone7.jpg","jpgs/Bone8.jpg","jpgs/Bone9.jpg","jpgs/Confuse.jpg","jpgs/Darkness.jpg","jpgs/Disrupt.jpg","jpgs/Echo.jpg","jpgs/Endure.jpg","jpgs/Essence0.jpg","jpgs/Essence1.jpg","jpgs/Essence2.jpg","jpgs/Essence3.jpg","jpgs/EssenceBack2.jpg","jpgs/Extract0.jpg","jpgs/Extract1.jpg","jpgs/Extract2.jpg","jpgs/Extract3.jpg","jpgs/ExtractBack.jpg","jpgs/Fear.jpg","jpgs/FennecFoxBack.jpg","jpgs/Foresight.jpg","jpgs/Herbs0.jpg","jpgs/Herbs1.jpg","jpgs/Herbs2.jpg","jpgs/Herbs3.jpg","jpgs/Herbs4.jpg","jpgs/Herbs5.jpg","jpgs/Herbs6.jpg","jpgs/Herbs7.jpg","jpgs/Herbs8.jpg","jpgs/Herbs9.jpg","jpgs/Honey.jpg","jpgs/Honey0.jpg","jpgs/Honey1.jpg","jpgs/Honey2.jpg","jpgs/Honey3.jpg","jpgs/Honey4.jpg","jpgs/Honey5.jpg","jpgs/Honey6.jpg","jpgs/Honey7.jpg","jpgs/Honey8.jpg","jpgs/Honey9.jpg","jpgs/HoneyBadgerBack.jpg","jpgs/Incense0.jpg","jpgs/Incense1.jpg","jpgs/Incense2.jpg","jpgs/Incense3.jpg","jpgs/IncenseBack2.jpg","jpgs/Invisibility.jpg","jpgs/Mushroom.jpg","jpgs/Mushroom0.jpg","jpgs/Mushroom1.jpg","jpgs/Mushroom2.jpg","jpgs/Mushroom3.jpg","jpgs/Mushroom4.jpg","jpgs/Mushroom5.jpg","jpgs/Mushroom6.jpg","jpgs/Mushroom7.jpg","jpgs/Mushroom8.jpg","jpgs/Mushroom9.jpg","jpgs/PangolinBack.jpg","jpgs/Plague.jpg","jpgs/Poison0.jpg","jpgs/Poison1.jpg","jpgs/Poison2.jpg","jpgs/Poison3.jpg","jpgs/PoisonBack2.jpg","jpgs/RedPandaBack.jpg","jpgs/Restore.jpg","jpgs/Scorch.jpg","jpgs/Seeds0.jpg","jpgs/Seeds1.jpg","jpgs/Seeds2.jpg","jpgs/Seeds3.jpg","jpgs/Seeds4.jpg","jpgs/Seeds5.jpg","jpgs/Seeds6.jpg","jpgs/Seeds7.jpg","jpgs/Seeds8.jpg","jpgs/Seeds9.jpg","jpgs/Silence.jpg","jpgs/SlothBack.jpg","jpgs/Terraform.jpg","jpgs/TimeStop.jpg","jpgs/TimeStop2.jpg","jpgs/TimeStopBack.jpg","jpgs/Tonic0.jpg","jpgs/Tonic1.jpg","jpgs/Tonic2.jpg","jpgs/Tonic3.jpg","jpgs/TonicBack2.jpg","jpgs/Transmute.jpg","jpgs/pic4905412 copy.jpg","jpgs/pic4905414 copy.jpg","jpgs/pic4905416 copy.jpg","jpgs/pic4905417 copy.jpg","serviceWorker.js","components/components.js","components/TopRow.js","components/MidRow.js","components/BottomRow.js","components/Board.js","CharacterSelectScreen.js","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Boolean","window","location","hostname","match","Header","children","rest","className","styles","header","CharacterBox","React","forwardRef","ref","isSelected","type","headerProps","imgProps","src","disableFlashing","cx","characterBox","selectedBox","tier2","selected","noAnimation","alt","Subheader","subheader","Content","container","CARDS","initialCards","cardStyles","padding","display","flexShrink","flexGrow","fontSize","width","maxWidth","maxHeight","TopRow","props","useState","cards","setCards","countSubstrings","honeyCount","setHoneyCount","seedsCount","setSeedsCount","herbsCount","setHerbsCount","mushroomCount","setMushroomCount","boneCount","setBoneCount","imageIngredients","image","key","require","replace","n","borderRadius","marginBottom","border","includes","useEffect","count","style","onClick","array","i","length","j","Math","floor","random","slice","shuffleArray","float","margin","flexWrap","justifyContent","subs","filter","card","MidRow","extractCount","setExtractCount","poisonCount","setPoisonCount","essenceCount","setEssenceCount","incenseCount","setIncenseCount","tonicCount","setTonicCount","imagePotions","BottomRow","setAwakenCount","confuseCount","setConfuseCount","darknessCount","setDarknessCount","disruptCount","setDisruptCount","echoCount","setEchoCount","endureCount","setEndureCount","fearCount","setFearCount","foresightCount","setForesightCount","invisibilityCount","setInvisibilityCount","plagueCount","setPlagueCount","restoreCount","setRestoreCount","scorchCount","setScorchCount","terraformCount","setTerraformCount","transmuteCount","setTransmuteCount","timestopCount","setTimeStopCount","Board","state","counts","borderColor","borderWidth","color","this","spells","Component","characterSelections","RedPanda","Sloth","FennecFox","Pangolin","HoneyBadger","charSelectionMapper","reduce","acc","CharacterSelectScreen","morphRef","createRef","morphedRef","setSelected","morphing","setMorphing","morphed","setMorphed","ready","setReady","shutdown","setShutdown","scrollToComponent","current","offset","align","duration","setTimeout","onSelect","prevSelected","t","onMorph","useLevelUpScreen","root","height","noviceImg","index","morph","hidden","morphArrow","name","opacity","marginTop","disabled","morphArrowFlipped","unique","next","position","size","loading","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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AOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gB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","file":"static/js/main.60a7f9fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__12Vb-\",\"container\":\"styles_container__35j3T\",\"header\":\"styles_header__1yVSC\",\"subheader\":\"styles_subheader__3sp6N\",\"characterBox\":\"styles_characterBox__1lL5s\",\"selectedBox\":\"styles_selectedBox__2hxuL\",\"tier2\":\"styles_tier2__7Ykop\",\"selected\":\"styles_selected__2avgF\",\"hueRotate\":\"styles_hueRotate__1OZmA\",\"morph\":\"styles_morph__2CR5j\",\"morphArrow\":\"styles_morphArrow__1VR4I\",\"morphArrowFlipped\":\"styles_morphArrowFlipped__1wEJW styles_morphArrow__1VR4I\",\"morphed\":\"styles_morphed__2T05V\",\"flashfade\":\"styles_flashfade__2hHoU\",\"hidden\":\"styles_hidden__Mcn6t\",\"next\":\"styles_next__3X3rv\",\"shutdown\":\"styles_shutdown__FJgOn\"};","module.exports = __webpack_public_path__ + \"static/media/RedPanda.a2acd1d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sloth.afa436b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FennecFox.6a2d8c1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HoneyBadger.73d990e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pangolin.a038756f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4767592.24c6abda.jpg\";","var map = {\n\t\"./49.jpg\": 64,\n\t\"./Awaken.jpg\": 65,\n\t\"./Bone - Copy copy.jpg\": 66,\n\t\"./Bone copy.jpg\": 67,\n\t\"./Bone.jpg\": 68,\n\t\"./Bone0.jpg\": 69,\n\t\"./Bone1.jpg\": 70,\n\t\"./Bone2.jpg\": 71,\n\t\"./Bone3.jpg\": 72,\n\t\"./Bone4.jpg\": 73,\n\t\"./Bone5.jpg\": 74,\n\t\"./Bone6.jpg\": 75,\n\t\"./Bone7.jpg\": 76,\n\t\"./Bone8.jpg\": 77,\n\t\"./Bone9.jpg\": 78,\n\t\"./Confuse.jpg\": 79,\n\t\"./Darkness.jpg\": 80,\n\t\"./Disrupt.jpg\": 81,\n\t\"./Echo.jpg\": 82,\n\t\"./Endure.jpg\": 83,\n\t\"./Essence0.jpg\": 84,\n\t\"./Essence1.jpg\": 85,\n\t\"./Essence2.jpg\": 86,\n\t\"./Essence3.jpg\": 87,\n\t\"./EssenceBack2.jpg\": 88,\n\t\"./Extract0.jpg\": 89,\n\t\"./Extract1.jpg\": 90,\n\t\"./Extract2.jpg\": 91,\n\t\"./Extract3.jpg\": 92,\n\t\"./ExtractBack.jpg\": 93,\n\t\"./Fear.jpg\": 94,\n\t\"./FennecFox.jpg\": 10,\n\t\"./FennecFoxBack.jpg\": 95,\n\t\"./Foresight.jpg\": 96,\n\t\"./Herbs0.jpg\": 97,\n\t\"./Herbs1.jpg\": 98,\n\t\"./Herbs2.jpg\": 99,\n\t\"./Herbs3.jpg\": 100,\n\t\"./Herbs4.jpg\": 101,\n\t\"./Herbs5.jpg\": 102,\n\t\"./Herbs6.jpg\": 103,\n\t\"./Herbs7.jpg\": 104,\n\t\"./Herbs8.jpg\": 105,\n\t\"./Herbs9.jpg\": 106,\n\t\"./Honey.jpg\": 107,\n\t\"./Honey0.jpg\": 108,\n\t\"./Honey1.jpg\": 109,\n\t\"./Honey2.jpg\": 110,\n\t\"./Honey3.jpg\": 111,\n\t\"./Honey4.jpg\": 112,\n\t\"./Honey5.jpg\": 113,\n\t\"./Honey6.jpg\": 114,\n\t\"./Honey7.jpg\": 115,\n\t\"./Honey8.jpg\": 116,\n\t\"./Honey9.jpg\": 117,\n\t\"./HoneyBadger.jpg\": 11,\n\t\"./HoneyBadgerBack.jpg\": 118,\n\t\"./Incense0.jpg\": 119,\n\t\"./Incense1.jpg\": 120,\n\t\"./Incense2.jpg\": 121,\n\t\"./Incense3.jpg\": 122,\n\t\"./IncenseBack2.jpg\": 123,\n\t\"./IngredientBacks.jpg\": 19,\n\t\"./Invisibility.jpg\": 124,\n\t\"./Mushroom.jpg\": 125,\n\t\"./Mushroom0.jpg\": 126,\n\t\"./Mushroom1.jpg\": 127,\n\t\"./Mushroom2.jpg\": 128,\n\t\"./Mushroom3.jpg\": 129,\n\t\"./Mushroom4.jpg\": 130,\n\t\"./Mushroom5.jpg\": 131,\n\t\"./Mushroom6.jpg\": 132,\n\t\"./Mushroom7.jpg\": 133,\n\t\"./Mushroom8.jpg\": 134,\n\t\"./Mushroom9.jpg\": 135,\n\t\"./Pangolin.jpg\": 12,\n\t\"./PangolinBack.jpg\": 136,\n\t\"./Plague.jpg\": 137,\n\t\"./Poison0.jpg\": 138,\n\t\"./Poison1.jpg\": 139,\n\t\"./Poison2.jpg\": 140,\n\t\"./Poison3.jpg\": 141,\n\t\"./PoisonBack2.jpg\": 142,\n\t\"./RedPanda.jpg\": 8,\n\t\"./RedPandaBack.jpg\": 143,\n\t\"./Restore.jpg\": 144,\n\t\"./Scorch.jpg\": 145,\n\t\"./Seeds0.jpg\": 146,\n\t\"./Seeds1.jpg\": 147,\n\t\"./Seeds2.jpg\": 148,\n\t\"./Seeds3.jpg\": 149,\n\t\"./Seeds4.jpg\": 150,\n\t\"./Seeds5.jpg\": 151,\n\t\"./Seeds6.jpg\": 152,\n\t\"./Seeds7.jpg\": 153,\n\t\"./Seeds8.jpg\": 154,\n\t\"./Seeds9.jpg\": 155,\n\t\"./Silence.jpg\": 156,\n\t\"./Sloth.jpg\": 9,\n\t\"./SlothBack.jpg\": 157,\n\t\"./SpellBacks.jpg\": 23,\n\t\"./Terraform.jpg\": 158,\n\t\"./TimeStop.jpg\": 159,\n\t\"./TimeStop2.jpg\": 160,\n\t\"./TimeStopBack.jpg\": 161,\n\t\"./Tonic0.jpg\": 162,\n\t\"./Tonic1.jpg\": 163,\n\t\"./Tonic2.jpg\": 164,\n\t\"./Tonic3.jpg\": 165,\n\t\"./TonicBack2.jpg\": 166,\n\t\"./Transmute.jpg\": 167,\n\t\"./pic4767592.jpg\": 13,\n\t\"./pic4905412 copy.jpg\": 168,\n\t\"./pic4905414 copy.jpg\": 169,\n\t\"./pic4905416 copy.jpg\": 170,\n\t\"./pic4905417 copy.jpg\": 171\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 18;","module.exports = __webpack_public_path__ + \"static/media/IngredientBacks.1d082490.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SpellBacks.c601cd60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/49.993cd844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Awaken.e22699e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone - Copy copy.63a91ebd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone copy.e5554a87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone.e198b377.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone0.41bb4682.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone1.51ec3286.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone2.6c135012.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone3.eba8ebf1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone4.4060c01f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone5.bd20623d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone6.22c97331.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone7.a44a5736.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone8.647e806c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bone9.5edfc40e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Confuse.27f80abf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Darkness.ac65d8a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Disrupt.b2ae9a5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Echo.60bdbea8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Endure.ba3ece36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Essence0.2ee79667.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Essence1.779f4e94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Essence2.8d5631c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Essence3.91e51485.jpg\";","module.exports = __webpack_public_path__ + \"static/media/EssenceBack2.366db78d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Extract0.359262ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Extract1.4d89eea4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Extract2.81323b8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Extract3.d25f4772.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ExtractBack.668c197e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Fear.d9a11fca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FennecFoxBack.1883faf4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Foresight.cd1d8daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs0.c52e8252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs1.578d91e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs2.583cf668.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs3.18116cae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs4.bfe5792b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs5.cd3e3f9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs6.c7b96a7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs7.60d0e968.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs8.0fed927b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Herbs9.eb87640c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey.1d5816ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey0.7cc38f7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey1.6279e18b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey2.b744b9a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey3.08f5004b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey4.82e2d345.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey5.dace00a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey6.b373c8e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey7.a66d3c70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey8.c486d9ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Honey9.daeb0e9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HoneyBadgerBack.5d6bb757.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Incense0.8b619d30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Incense1.cbaf88cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Incense2.188cc27e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Incense3.61185603.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IncenseBack2.0a0eec4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Invisibility.c430d717.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom.57352338.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom0.27a4dc58.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom1.ee49d2eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom2.5af636f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom3.96f9113d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom4.8d150bab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom5.7afea1a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom6.c5575314.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom7.37eb7655.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom8.0cce1a9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom9.526ac3aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PangolinBack.dbac41e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Plague.73ce3677.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Poison0.31de1f4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Poison1.af5c9ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Poison2.a88df2a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Poison3.eee186f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PoisonBack2.af440313.jpg\";","module.exports = __webpack_public_path__ + \"static/media/RedPandaBack.5c4fa55a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Restore.90a95f9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Scorch.0e84c19d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds0.5a01786e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds1.ce87e078.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds2.b900f2de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds3.727bacc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds4.1faf187c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds5.5b444b35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds6.fbca7391.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds7.836af442.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds8.c3f49c85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Seeds9.e0ca0a8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Silence.c0495fa4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SlothBack.62fe8eb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Terraform.e7757495.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TimeStop.94bdb044.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TimeStop2.23d1dbf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TimeStopBack.6b556270.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tonic0.56add6d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tonic1.21122c79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tonic2.4971b899.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tonic3.b104eb68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/TonicBack2.c0d72617.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Transmute.3256f1f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4905412 copy.4efd3559.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4905414 copy.9fd9eba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4905416 copy.7c3a1ef1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4905417 copy.8c5aa26f.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport styles from '../styles.module.css'\r\n\r\nexport const Header = ({ children, ...rest }) => (\r\n  // eslint-disable-next-line\r\n  <h1 className={styles.header} {...rest}>\r\n    {children}\r\n  </h1>\r\n\r\n  \r\n)\r\n\r\n\r\nexport const CharacterBox = React.forwardRef(\r\n    (\r\n      {\r\n        isSelected,\r\n        type,\r\n        headerProps = {},\r\n        imgProps = {},\r\n        src,\r\n        disableFlashing,\r\n        ...rest\r\n      },\r\n      ref,\r\n    ) => (\r\n      <div\r\n        ref={ref}\r\n        className={cx(styles.characterBox, {\r\n          [styles.selectedBox]: isSelected,\r\n        })}\r\n        {...rest}\r\n      >\r\n        {/* {type && <h3 {...headerProps}>{type}</h3>} */}\r\n        <img\r\n          {...imgProps}\r\n          src={src || imgProps.src}\r\n          className={cx(styles.tier2, imgProps.className, {\r\n            [styles.selected]: isSelected,\r\n            [styles.noAnimation]: !!disableFlashing,\r\n          })}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    ),\r\n  )\r\n\r\n\r\n\r\nexport const Subheader = ({ children, ...rest }) => (\r\n  <small className={styles.subheader} {...rest}>\r\n    {children}\r\n  </small>\r\n)\r\n\r\nexport const Content = ({ children, ...rest }) => (\r\n  <div className={styles.container} {...rest}>\r\n    {children}\r\n  </div>\r\n)","import React, { useState, useEffect } from \"react\";\r\n\r\n// The deck of cards is probably a constant whose values \r\n// never change directly. It's possible that I'm wrong and the deck \r\n// *does* change, but even so I imagine it would come from a prop or\r\n//  context from a parent component. Either way the cards array should not be mutable.\r\nconst CARDS = [\r\n  \"Honey0\",\r\n  \"Bone0\",\r\n  \"Herbs0\",\r\n  \"Mushroom0\",\r\n  \"Seeds0\",\r\n  \"Honey1\",\r\n  \"Bone1\",\r\n  \"Herbs1\",\r\n  \"Mushroom1\",\r\n  \"Seeds1\",\r\n  \"Honey2\",\r\n  \"Bone2\",\r\n  \"Herbs2\",\r\n  \"Mushroom2\",\r\n  \"Seeds2\",\r\n  \"Honey3\",\r\n  \"Bone3\",\r\n  \"Herbs3\",\r\n  \"Mushroom3\",\r\n  \"Seeds3\",\r\n  \"Honey4\",\r\n  \"Bone4\",\r\n  \"Herbs4\",\r\n  \"Mushroom4\",\r\n  \"Seeds4\",\r\n  \"Honey5\",\r\n  \"Bone5\",\r\n  \"Herbs5\",\r\n  \"Mushroom5\",\r\n  \"Seeds5\",\r\n  \"Honey6\",\r\n  \"Bone6\",\r\n  \"Herbs6\",\r\n  \"Mushroom6\",\r\n  \"Seeds6\",\r\n  \"Honey7\",\r\n  \"Bone7\",\r\n  \"Herbs7\",\r\n  \"Mushroom7\",\r\n  \"Seeds7\",\r\n  \"Honey8\",\r\n  \"Bone8\",\r\n  \"Herbs8\",\r\n  \"Mushroom8\",\r\n  \"Seeds8\",\r\n  \"Honey9\",\r\n  \"Bone9\",\r\n  \"Herbs9\",\r\n  \"Mushroom9\",\r\n  \"Seeds9\"\r\n];\r\n\r\nconst initialCards = [];\r\n\r\nconst cardStyles = {\r\n  padding: 10,\r\n  display: \"block\",\r\n  flexShrink: 0,\r\n  flexGrow: 0,\r\n  fontSize: 12,\r\n\r\n  width: \"calc(33.325% - 19.925px)\",\r\n  maxWidth:80,\r\n  maxHeight:150\r\n  \r\n  // Height: \"calc(33.325% - 19.925px)\"\r\n};\r\n\r\nfunction TopRow(props) {\r\n  // Keep the current hand of cards in state rather than mutating an array directly in the function body. React function components should be pure, with all side effects ocurring inside of effect hooks.\r\n  let [cards, setCards] = useState(initialCards);\r\n  let [honeyCount, setHoneyCount] = useState(\r\n    countSubstrings(initialCards, \"Honey\")\r\n  );\r\n  let [seedsCount, setSeedsCount] = useState(\r\n    countSubstrings(initialCards, \"Seeds\")\r\n  );\r\n  let [herbsCount, setHerbsCount] = useState(\r\n    countSubstrings(initialCards, \"Herbs\")\r\n  );\r\n\r\n  let [mushroomCount, setMushroomCount] = useState(\r\n    countSubstrings(initialCards, \"Mushroom\")\r\n  );\r\n  let [boneCount, setBoneCount] = useState(\r\n    countSubstrings(initialCards, \"Bone\")\r\n  );\r\n\r\n\r\n  let imageIngredients = cards.map(image => (\r\n    <img\r\n      key={image}\r\n      src={require(`../jpgs/${image}.jpg`)}\r\n      alt=\"ingredients\" className=\"img-responsive\"\r\n\r\n      // You don't have to do this exactly, but human readable alt text is important if the context is important for the functionality of the app, which it is in this case\r\n      alt={`Ingredient card ${image\r\n        .replace(/\\d/, n => ` ${n}`)\r\n        .replace(/\\s0?(0+)/, \" \")}`}\r\n      className=\"img-responsive\"\r\n      style={{\r\n        //width: \"15%\",\r\n        //float: \"left\",\r\n\r\n        // just for demo purposes here since I don't have your images\r\n        ...cardStyles,\r\n        borderRadius:15,\r\n        padding: 1,\r\n        marginBottom:3,\r\n        maxWidth:80,\r\n        border: `1px solid ${image.includes(\"Honey\") ? \"goldenrod\" : \"red\"}`\r\n      //    &&\r\n      // `1px solid ${image.includes(\"Herbs\") ? \"green\" : \"\"}`,\r\n        // border: `1px solid ${image.includes(\"Bone\") ? \"white\" : \"\"}`,\r\n      \r\n        // border: `2px solid ${image.includes(\"Seeds\") ? \"darksalmon\" : \"blue\"}`,\r\n        // border: `2px solid ${image.includes(\"Herbs\") ? \"orange\" : \"puple\"}`,\r\n        // border: `2px solid ${image.includes(\"Bone\") ? \"goldenwhite\" : \"red\"}`,\r\n        // border: `2px solid ${image.includes(\"Mushroom\") ? \"slateblue\" : \"red\"}`,\r\n      \r\n      }}\r\n    />\r\n  ));\r\n\r\n  function shuffleCards() {\r\n    setCards(shuffleArray(CARDS));\r\n    \r\n  }\r\n\r\n\r\n  // const cardStyles = {\r\n  //   honey: {...},\r\n  //   herb: {...},\r\n  //   ...\r\n  // }\r\n  // then in your component, maybe you have a category prop of some sort\r\n  // <Thing style={cardStyles[category]} />\r\n  // <Honey style={cardStyles[category]} />\r\n    // <Herbs style={cardStyles[category]} />\r\n  // <Seeds style={cardStyles[category]} />\r\n\r\n  function reset() {\r\n    setCards(initialCards);\r\n    setHoneyCount(countSubstrings(initialCards, \"Honey\"));\r\n    setSeedsCount(countSubstrings(initialCards, \"Seeds\"));\r\n    setHerbsCount(countSubstrings(initialCards, \"Herbs\"));\r\n    setMushroomCount(countSubstrings(initialCards, \"Mushrooms\"));\r\n    setBoneCount(countSubstrings(initialCards, \"Bone\"));\r\n  }\r\n  // Any time our cards are updated, we want to increment the\r\n  // number of Honey cards in our hand.\r\n  useEffect(() => {\r\n    setHoneyCount(count => count + countSubstrings(cards, \"Honey\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setSeedsCount(count => count + countSubstrings(cards, \"Seeds\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setHerbsCount(count => count + countSubstrings(cards, \"Herbs\"));\r\n  }, [cards]);\r\n  \r\n  useEffect(() => {\r\n    setMushroomCount(count => count + countSubstrings(cards, \"Mushroom\"));\r\n  }, [cards]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setBoneCount(count => count + countSubstrings(cards, \"Bone\"));\r\n  }, [cards]);\r\n  // ComponentDidMount(){\r\n  // this.shuffleCards(this.state.cards)\r\n  // }\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"row\"\r\n      id=\"topRow\"\r\n      style={\r\n        {\r\n          // WebkitBorderRadius: 2,\r\n          // WebkitTextStrokeColor: \"red\",\r\n          // width: \"90%\",\r\n          // maxHeight: \"30%\",\r\n          // padding: 0\r\n        }\r\n      }\r\n    >\r\n      <button onClick={shuffleCards}\r\n               style={{float:\"right\"}}\r\n          >\r\n        {cards.length ? \"Shuffle\" : \"Deal\"}\r\n   \r\n      </button>\r\n      <button onClick={reset}\r\n          style={{float:\"right\"}}\r\n        >Reset</button>\r\n      \r\n      {/* <hr /> */}\r\n      <div className=\"col-6-md\">\r\n        <img\r\n          src={require(\"../jpgs/IngredientBacks.jpg\")}\r\n          alt=\"Back of ingredient card\"\r\n          style={{\r\n            // width: \"10%\",\r\n            float: \"left\",\r\n\r\n            // just for demo purposes here since I don't have your images\r\n            ...cardStyles,\r\n            padding:1,\r\n            borderRadius:15,\r\n            marginBottom:2,\r\n           \r\n            margin: 0,\r\n            maxWidth:35,\r\n            border: \"1px solid blue\"\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"col-6-md\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n          padding: 1,\r\n          float: \"left\"\r\n        }}\r\n      >\r\n        {imageIngredients}\r\n      </div>\r\n      {/* <hr /> */}\r\n      <div>\r\n        <strong> Honey: </strong> {honeyCount}\r\n     \r\n        <strong> Seeds: </strong> {seedsCount}\r\n      \r\n        <strong> Herbs: </strong> {herbsCount}\r\n      </div>\r\n      <div>\r\n        <strong> Mushrooms: </strong> {mushroomCount}\r\n     \r\n        <strong> Bone: </strong> {boneCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TopRow;\r\n\r\n// I put these utility functions outside of the component body since there is no real reason to recreate them on each render.\r\n\r\n/**\r\n * @param {any[]} array\r\n */\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  // Use slice instead of splice here to prevent mutating the original array\r\n  return array.slice(0, 5);\r\n}\r\n\r\n/**\r\n * @param {string[]} array\r\n * @param {string} subs\r\n */\r\nfunction countSubstrings(array, subs) {\r\n  return array.filter(card => card.includes(subs)).length;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// import \"../style.css\"\r\n\r\n\r\nconst CARDS = [\r\n  \"Extract0\", \"Essence0\", \"Incense0\", \"Poison0\", \"Tonic0\",\r\n    \"Extract1\", \"Essence1\", \"Incense1\", \"Poison1\", \"Tonic1\",\r\n    \"Extract2\", \"Essence2\", \"Incense2\", \"Poison2\", \"Tonic2\",\r\n    \"Extract3\", \"Essence3\", \"Incense3\", \"Poison3\", \"Tonic3\"\r\n];\r\n \r\n\r\nconst initialCards = [];\r\n\r\nconst cardStyles = {\r\n  padding: 1,\r\n  display: \"block\",\r\n  flexShrink: 0,\r\n  flexGrow: 0,\r\n  fontSize: 12,\r\n  width: \"calc(30.325% - 19.925px)\",\r\n  maxHeight:200,\r\n  maxWidth:100,\r\n  borderRadius:15,\r\n};\r\n\r\n\r\nfunction MidRow(props) {\r\n  let [cards, setCards] = useState(initialCards);\r\n  let [extractCount, setExtractCount] = useState(\r\n    countSubstrings(initialCards, \"Extract\")\r\n  );\r\n\r\n\r\n  let [poisonCount, setPoisonCount] = useState(\r\n    countSubstrings(initialCards, \"Poison\")\r\n  );\r\n  let [essenceCount, setEssenceCount] = useState(\r\n    countSubstrings(initialCards, \"Essence\")\r\n  );\r\n  let [incenseCount, setIncenseCount] = useState(\r\n    countSubstrings(initialCards, \"Incense\")\r\n  );\r\n  let [tonicCount, setTonicCount] = useState(\r\n    countSubstrings(initialCards, \"Tonic\")\r\n  );   \r\n\r\n\r\n\r\n\r\n\r\n\r\nlet imagePotions = cards.map(image => (\r\n  <img\r\n    key={image}\r\n    src={require(`../jpgs/${image}.jpg`)}\r\n    alt=\"potions\" className=\"img-responsive\"\r\n\r\n    // You don't have to do this exactly, but human readable alt text is important if the context is important for the functionality of the app, which it is in this case\r\n    alt={`Potion card ${image\r\n      .replace(/\\d/, n => ` ${n}`)\r\n      .replace(/\\s0?(0+)/, \" \")}`}\r\n    className=\"img-responsive\"\r\n    style={{\r\n      //width: \"15%\",\r\n      //float: \"left\",\r\n\r\n      // just for demo purposes here since I don't have your images\r\n      ...cardStyles,\r\n      padding: 1,\r\n      borderRadius:15,\r\n      marginBottom:2,\r\n      border: `1px solid ${image.includes(\"Extract\") ? \"goldenrod\" : \"red\"}`,\r\n      maxWidth:100\r\n    \r\n    \r\n    }}\r\n  />\r\n  ));\r\n   \r\n\r\n\r\n   \r\n  function shuffleCards() {\r\n    setCards(shuffleArray(CARDS));\r\n  }\r\n\r\n  function reset() {\r\n    setCards(initialCards);\r\n    setExtractCount(countSubstrings(initialCards, \"Extract\"));\r\n    setEssenceCount(countSubstrings(initialCards, \"Essence\"));\r\n    setIncenseCount(countSubstrings(initialCards, \"Incense\"));\r\n    setPoisonCount(countSubstrings(initialCards, \"Poison\"));\r\n    setTonicCount(countSubstrings(initialCards, \"Tonic\"));\r\n  }\r\n\r\n  // Any time our cards are updated, we want to increment the\r\n  // number of Extract cards in our hand.\r\n  useEffect(() => {\r\n    setExtractCount(count => count + countSubstrings(cards, \"Extract\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setEssenceCount(count => count + countSubstrings(cards, \"Essence\"));\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    setIncenseCount(count => count + countSubstrings(cards, \"Incense\"));\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    setPoisonCount(count => count + countSubstrings(cards, \"Poison\"));\r\n  }, [cards]);\r\n  useEffect(() => {\r\n    setTonicCount(count => count + countSubstrings(cards, \"Tonic\"));\r\n  }, [cards]);\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"row\"\r\n      id=\"midRow\"\r\n      style={\r\n        {\r\n          // WebkitBorderRadius: 2,\r\n          // WebkitTextStrokeColor: \"red\",\r\n          // width: \"90%\",\r\n          // maxHeight: \"30%\",\r\n              // padding: 0\r\n            }\r\n          }\r\n      >\r\n      <button onClick={shuffleCards}\r\n          \r\n          >\r\n        {cards.length ? \"Shuffle\" : \"Deal\"}\r\n      </button>\r\n      <button onClick={reset}\r\n             style={{float:\"right\"}}\r\n              >Reset</button>\r\n      {/* <hr /> */}\r\n      <div className=\"col-6-md\">\r\n        <img\r\n          src={require(\"../jpgs/IngredientBacks.jpg\")}\r\n          alt=\"Back of potion card\"\r\n          style={{\r\n            // width: \"15%\",\r\n            float: \"left\",\r\n            // just for demo purposes here since I don't have your images\r\n            ...cardStyles,\r\n            margin: 1,\r\n            marginBottom:2,\r\n            maxWidth:45,\r\n            margin: 0,\r\n         \r\n            border: \"1px solid blue\"\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"col-6-md\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n          padding: 1\r\n        \r\n        }}\r\n      >\r\n        {imagePotions}\r\n      </div>\r\n      {/* <hr /> */}\r\n      <div>\r\n        <strong>Extract:</strong> {extractCount}\r\n    \r\n        <strong> Essence:</strong> {essenceCount}\r\n       \r\n        <strong> Incense:</strong> {incenseCount}\r\n     </div><div>\r\n        <strong> Tonic:</strong> {tonicCount}\r\n     \r\n        <strong> Poison:</strong> {poisonCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MidRow;\r\n\r\n// I put these utility functions outside of the component body since there is no real reason to recreate them on each render.\r\n\r\n/**\r\n * @param {any[]} array\r\n */\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  // Use slice instead of splice here to prevent mutating the original array\r\n  return array.slice(0, 6);\r\n}\r\n\r\n/**\r\n * @param {string[]} array\r\n * @param {string} subs\r\n */\r\nfunction countSubstrings(array, subs) {\r\n  return array.filter(card => card.includes(subs)).length;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// import \"../styles.css\";\r\n// import SpellDescription from \"./SpellDescription\";\r\n// The deck of cards is probably a constant whose values \r\n// never change directly. It's possible that I'm wrong and the deck \r\n// *does* change, but even so I imagine it would come from a prop or\r\n//  context from a parent component. Either way the cards array should not be mutable.\r\nconst CARDS =[\"Awaken\", \"Confuse\", \"Darkness\", \"Disrupt\", \"Echo\", \"Endure\", \"Fear\", \r\n\"Foresight\", \"Invisibility\", \"Plague\", \"Restore\", \"Scorch\", \"Terraform\", \"Transmute\", \"TimeStop\"];\r\n\r\nconst initialCards = [];\r\n\r\nconst cardStyles = {\r\n  padding: 10,\r\n  display: \"block\",\r\n  flexShrink: 0,\r\n  flexGrow: 0,\r\n  fontSize: 12,\r\n  width: \"calc(33.325% - 19.925px)\",\r\n  maxWidth:80,\r\n  maxHeight:150\r\n  \r\n  // Height: \"calc(33.325% - 19.925px)\"\r\n};\r\n\r\nfunction BottomRow(props) {\r\n//switch example from gender to \"spells\", ===, male to awaken. \"awaken\"\r\n// var greeting => var SpellDescription\r\n// spellNotDisplayed ==> notChosen\r\n//spellDisplayed ==> chosen\r\n\r\n//   var SpellDescription = React.createClass({\r\n//     render:function(){\r\n//         var spellNotDisplayed = \"\";\r\n//         var spellDisplayed = \"\";\r\n//         if(this.props.spells === \"notChosen\"){\r\n//             spellDisplayed = \"displayNone\";\r\n//         }\r\n//         else{\r\n//             spellNotDisplayed = \"displayNone\";\r\n//         }\r\n//         return (\r\n//             <div>\r\n//                 <div>Spells</div>\r\n//                 <div className={spellDisplayed}>Hello Mrs. Jones</div>\r\n//                 <div className={spellNotDisplayed}>Hello Mr. Jones</div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// });\r\n\r\n  // Keep the current hand of cards in state rather than mutating an array directly in the function body. React function components should be pure, with all side effects ocurring inside of effect hooks.\r\n  let [cards, setCards] = useState(initialCards);\r\n  let [awakenCount, setAwakenCount] = useState(\r\n    countSubstrings(initialCards, \"Awaken\")\r\n  );\r\n  let [confuseCount, setConfuseCount] = useState(\r\n    countSubstrings(initialCards, \"Confuse\")\r\n  );\r\n  let [darknessCount, setDarknessCount] = useState(\r\n    countSubstrings(initialCards, \"Darkness\")\r\n  );\r\n\r\n  let [disruptCount, setDisruptCount] = useState(\r\n    countSubstrings(initialCards, \"Disrupt\")\r\n  );\r\n  let [echoCount, setEchoCount] = useState(\r\n    countSubstrings(initialCards, \"Echo\")\r\n  );\r\n  let [endureCount, setEndureCount] = useState(\r\n    countSubstrings(initialCards, \"Endure\")\r\n  );\r\n  let [fearCount, setFearCount] = useState(\r\n    countSubstrings(initialCards, \"Fear\")\r\n  );\r\n  let [foresightCount, setForesightCount] = useState(\r\n    countSubstrings(initialCards, \"Foresight\")\r\n  );\r\n\r\n  let [invisibilityCount, setInvisibilityCount] = useState(\r\n    countSubstrings(initialCards, \"Invisibility\")\r\n  );\r\n  let [plagueCount, setPlagueCount] = useState(\r\n    countSubstrings(initialCards, \"Plague\")\r\n  );\r\n  let [restoreCount, setRestoreCount] = useState(\r\n    countSubstrings(initialCards, \"Restore\")\r\n  );\r\n  let [scorchCount, setScorchCount] = useState(\r\n    countSubstrings(initialCards, \"Scorch\")\r\n  );\r\n  let [terraformCount, setTerraformCount] = useState(\r\n    countSubstrings(initialCards, \"Terraform\")\r\n  );\r\n\r\n  let [transmuteCount, setTransmuteCount] = useState(\r\n    countSubstrings(initialCards, \"Transmute\")\r\n  );\r\n  let [timestopCount, setTimeStopCount] = useState(\r\n    countSubstrings(initialCards, \"TimeStop\")\r\n  );\r\n\r\n\r\n\r\n\r\n  let imageIngredients = cards.map(image => (\r\n    <img\r\n      key={image}\r\n      src={require(`../jpgs/${image}.jpg`)}\r\n      alt=\"spells\" className=\"img-responsive\"\r\n\r\n      // You don't have to do this exactly, but human readable alt text is important if the context is important for the functionality of the app, which it is in this case\r\n      alt={`Ingredient card ${image\r\n        .replace(/\\d/, n => ` ${n}`)\r\n        .replace(/\\s0?(0+)/, \" \")}`}\r\n      className=\"img-responsive\"\r\n      style={{\r\n        //width: \"15%\",\r\n        //float: \"left\",\r\n\r\n        // just for demo purposes here since I don't have your images\r\n        ...cardStyles,\r\n        borderRadius:15,\r\n        padding: 1,\r\n        marginBottom:3,\r\n        maxWidth:80,\r\n        border: `1px solid ${image.includes(\"Awaken\") ? \"goldenrod\" : \"blue\"}`\r\n\r\n      }}\r\n    />\r\n  ));\r\n\r\n  //we're going to make a style for \"notSpellCast\" :\"awakenCount\"\r\n//function is \r\n//state Not awaken: true\r\n\r\n\r\n\r\n  function shuffleCards() {\r\n    setCards(shuffleArray(CARDS));\r\n    \r\n  }\r\n\r\n\r\n  // const cardStyles = {\r\n  //   honey: {...},\r\n  //   herb: {...},\r\n  //   ...\r\n  // }\r\n  // then in your component, maybe you have a category prop of some sort\r\n  // <Thing style={cardStyles[category]} />\r\n  // <Honey style={cardStyles[category]} />\r\n    // <Herbs style={cardStyles[category]} />\r\n  // <Seeds style={cardStyles[category]} />\r\n\r\n  function reset() {\r\n    setCards(initialCards);\r\n    setAwakenCount(countSubstrings(initialCards, \"Awaken\"));\r\n    setConfuseCount(countSubstrings(initialCards, \"Confuse\"));\r\n    setDarknessCount(countSubstrings(initialCards, \"Darkness\"));\r\n    setDisruptCount(countSubstrings(initialCards, \"Disrupt\"));\r\n    setEchoCount(countSubstrings(initialCards, \"Echo\"));\r\n    setEndureCount(countSubstrings(initialCards, \"Endure\"));\r\n    setFearCount(countSubstrings(initialCards, \"Fear\"));\r\n    setForesightCount(countSubstrings(initialCards, \"Foresight\"));\r\n    setInvisibilityCount(countSubstrings(initialCards, \"Invisibility\"));\r\n    setPlagueCount(countSubstrings(initialCards, \"Plague\"));\r\n    setRestoreCount(countSubstrings(initialCards, \"Restore\"));\r\n    setScorchCount(countSubstrings(initialCards, \"Scorch\"));\r\n    setTerraformCount(countSubstrings(initialCards, \"Terraform\"));\r\n    setTransmuteCount(countSubstrings(initialCards, \"Transmute\"));\r\n    setTimeStopCount(countSubstrings(initialCards, \"TimeStop\"));\r\n  }\r\n  // Any time our cards are updated, we want to increment the\r\n  // number of Honey cards in our hand.\r\n  useEffect(() => {\r\n    setAwakenCount(count => count + countSubstrings(cards, \"Awaken\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setConfuseCount(count => count + countSubstrings(cards, \"Confuse\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setDarknessCount(count => count + countSubstrings(cards, \"Darkness\"));\r\n  }, [cards]);\r\n  \r\n  useEffect(() => {\r\n    setDisruptCount(count => count + countSubstrings(cards, \"Disrupt\"));\r\n  }, [cards]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setEchoCount(count => count + countSubstrings(cards, \"Echo\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setEndureCount(count => count + countSubstrings(cards, \"Endure\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setFearCount(count => count + countSubstrings(cards, \"Fear\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setForesightCount(count => count + countSubstrings(cards, \"Foresight\"));\r\n  }, [cards]);\r\n  \r\n  useEffect(() => {\r\n    setInvisibilityCount(count => count + countSubstrings(cards, \"Invisibility\"));\r\n  }, [cards]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setPlagueCount(count => count + countSubstrings(cards, \"Plague\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setRestoreCount(count => count + countSubstrings(cards, \"Restore\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setScorchCount(count => count + countSubstrings(cards, \"Scorch\"));\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setTerraformCount(count => count + countSubstrings(cards, \"Terraform\"));\r\n  }, [cards]);\r\n  \r\n  useEffect(() => {\r\n    setTransmuteCount(count => count + countSubstrings(cards, \"Transmute\"));\r\n  }, [cards]);\r\n\r\n  \r\n  useEffect(() => {\r\n    setTimeStopCount(count => count + countSubstrings(cards, \"TimeStop\"));\r\n  }, [cards]);\r\n\r\n\r\n//How to Hide 1\r\n//   <style type=\"text/css\">\r\n//     .hidden { display:none; }\r\n// </style>\r\n// render: function() {\r\n//     return (\r\n//       <div className={this.props.shouldHide ? 'hidden' : ''}>\r\n//         This will be hidden if you set <tt>props.shouldHide</tt> \r\n//         to something truthy.\r\n//       </div>\r\n//     );\r\n// }\r\n\r\n// // or in more modern JS and stateless react\r\n// const Example = props => <div className={props.shouldHide}/>Hello</div>\r\n\r\n\r\n//How to auto deal\r\n  // ComponentDidMount(){\r\n  // this.shuffleCards(this.state.cards)\r\n  // }\r\n  return (\r\n    <div\r\n      {...props}\r\n      className=\"row\"\r\n      id=\"bottomRow\"\r\n      style={\r\n        {\r\n          // WebkitBorderRadius: 2,\r\n          // WebkitTextStrokeColor: \"red\",\r\n          // width: \"90%\",\r\n          // maxHeight: \"30%\",\r\n          // padding: 0\r\n        }\r\n      }\r\n    >\r\n      <button onClick={shuffleCards}\r\n               style={{float:\"right\"}}\r\n          >\r\n        {cards.length ? \"Shuffle\" : \"Deal\"}\r\n   \r\n      </button>\r\n      <button onClick={reset}\r\n          style={{float:\"right\"}}\r\n        >Reset</button>\r\n      \r\n      {/* <hr /> */}\r\n      <div className=\"col-6-md\">\r\n        <img\r\n          src={require(\"../jpgs/SpellBacks.jpg\")}\r\n          alt=\"Back of ingredient card\"\r\n          style={{\r\n            // width: \"10%\",\r\n            float: \"left\",\r\n\r\n            // just for demo purposes here since I don't have your images\r\n            ...cardStyles,\r\n            padding:1,\r\n            borderRadius:15,\r\n            marginBottom:2,\r\n           \r\n            margin: 0,\r\n            maxWidth:35,\r\n            border: \"1px solid blue\"\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"col-6-md\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"space-between\",\r\n          padding: 1,\r\n          float: \"left\"\r\n        }}\r\n      >\r\n        {imageIngredients}\r\n    \r\n      {/* <hr /> */}\r\n    <div>\r\n{/*       \r\n<SpellDescription spells=\"spellNotDisplayed\"></SpellDescription>\r\n<SpellDescription spells=\"spellDisplayed\">Awaken: Incense-</SpellDescription> */}\r\n      {/* <div className={spellDisplayed}>Awaken: Incense-</div>\r\n     <div className={spellNotDisplayed}> </div> */}\r\n    </div>\r\n      {/* <div>\r\n        <strong  \r\n         className={props.awakenCount ? \"awakenCount\" : \"notSpellCast\"}        \r\n        > Awaken: Incense- </strong>\r\n          <p>Choose a player, they discard 2 ingredients of their choice.</p>\r\n          {awakenCount}\r\n     <br></br> */}\r\n        <strong> Confuse: Essense and Extract- </strong>\r\n        <p>Ingredients must be drawn at random until your next turn.</p>\r\n        {confuseCount}\r\n      </div>\r\n        <strong> Darkness: Essence and Tonic- </strong> \r\n        <p>Players must not cast spells until your next turn.</p>\r\n        {darknessCount}\r\n        <br></br>\r\n     \r\n      <div>\r\n        <strong> Disrupt: Poison and Incense- </strong> {disruptCount}\r\n        <p>All players pass one ingredient to the right.</p>\r\n     <br></br>\r\n        <strong> Echo: Extract- </strong>\r\n        <p>Take 2 of the same ingredient from the Ingredients Row.</p>\r\n         {echoCount}\r\n      <br></br>\r\n      </div>\r\n      <div>\r\n        <strong> Endure: Extract and Honey- </strong> \r\n        <p>Flip your character back over.</p>\r\n        {endureCount}\r\n     <br></br>\r\n        <strong> Fear: Poison</strong> \r\n        <p>Steal a random ingerdient from another player.</p>\r\n        {fearCount}\r\n      <br></br>\r\n        <strong> Foresight: Essence- </strong> \r\n        <p>Draw 2 random ingredient</p>\r\n        {foresightCount}\r\n      <br></br>\r\n      </div>\r\n      <div>\r\n        <strong> Invisibility: Essence and Herbs- </strong> \r\n        <p>Spells can not affect you until next turn.</p>\r\n        {invisibilityCount}\r\n     <br></br>\r\n        <strong> Plague: Poison and Seeds- </strong> \r\n        <p>All players discard a random ingerdient.</p>\r\n        {plagueCount}\r\n      <br></br>\r\n      </div>\r\n      <div>\r\n        <strong> Restore: Tonic- </strong> \r\n        <p>Take any 1 ingerdient from the discard pile.</p>\r\n        {restoreCount}\r\n     <br></br>\r\n        <strong> Scorch: Incence and Bone- </strong> \r\n        <p>Discard 2 ingredients from the ingredients row.</p>\r\n        {scorchCount}\r\n        <br></br>\r\n        <strong> Terraform: Incense and Extract-</strong> \r\n        <p>Discard all ingredients from the row and place 5 new ones.</p>\r\n        {terraformCount}\r\n        <br></br>\r\n      </div>\r\n      <div>\r\n        <strong> Transmute: Tonic and Poison</strong> \r\n        <p>You may use any 1 ingerdient as any other ingerdient.</p>\r\n        {transmuteCount}\r\n        <br></br>\r\n        <strong> TimeStop: Mushroom, Herbs, Bone, Seeds, Honey-</strong> \r\n        <p> End the Game. Not affected by other spells. </p>\r\n        {timestopCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default BottomRow;\r\n\r\n// I put these utility functions outside of the component body since there is no real reason to recreate them on each render.\r\n\r\n/**\r\n * @param {any[]} array\r\n */\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  // Use slice instead of splice here to prevent mutating the original array\r\n  return array.slice(0, 5);\r\n}\r\n\r\n/**\r\n * @param {string[]} array\r\n * @param {string} subs\r\n */\r\nfunction countSubstrings(array, subs) {\r\n  return array.filter(card => card.includes(subs)).length;\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\nimport TopRow from \"./TopRow\";\r\nimport MidRow from './MidRow';\r\nimport BottomRow from \"./BottomRow\"\r\n// import YourCharacterCard from \"./YourCharacterCard\"\r\n// import { thisExpression } from \"@babel/types\";\r\n// import Specials from \"./Specials\";\r\nclass Board extends Component {\r\n  // Setting this.state.cards to the cards json array\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      counts: {\r\n        honeyCount:0\r\n      }}}\r\nrender(){\r\n  return (\r\n    <div className=\"boardContainer\">\r\n\r\n       \r\n      <div className=\"board\"\r\n      style={{borderColor:\"red\", borderWidth:4, color:\"white\"}}\r\n      >  \r\n       {/* <Specials></Specials> */}\r\n       {/* <div>\r\n        <YourCharacterCard/></div> */}\r\n        <div  style={{borderColor:\"red\", borderWidth:4, color:\"white\"}}>\r\n        <h1 style={{borderColor:\"red\", borderWidth:4, color:\"white\", fontSize:20}}>Ingredients</h1>\r\n          <TopRow   \r\n          // ingredientsCounts={this.props.ingredientsCounts}\r\n          >\r\n           \r\n            </TopRow>\r\n            <h1 style={{fontSize:20}}>Potions</h1>\r\n            <MidRow\r\n       >\r\n          {/* <p>{this.props.potions}</p> */}\r\n\r\n       </MidRow>\r\n       \r\n       </div><br></br>\r\n\r\n       <div  style={{borderColor:\"red\",}}>\r\n      <h1 style={{borderColor:\"red\", borderWidth:4, color:\"white\", fontSize:20}}>Spells</h1>\r\n       <BottomRow>\r\n         <p>{this.state.spells}</p>\r\n         </BottomRow></div>\r\n        \r\n           </div>\r\n           \r\n            \r\n          </div>\r\n\r\n  );\r\n}\r\n}\r\nexport default Board;","import React from 'react';\nimport cx from 'classnames';\nimport { RingLoader } from '../node_modules/react-spinners';\nimport { MdKeyboardTab } from '../node_modules/react-icons/md/index.js'\nimport scrollToComponent from '../node_modules/react-scroll-to-component'\nimport RedPanda from './jpgs/RedPanda.jpg';\nimport Sloth from './jpgs/Sloth.jpg';\nimport FennecFox from './jpgs/FennecFox.jpg';\nimport HoneyBadger from './jpgs/HoneyBadger.jpg';\nimport Pangolin from './jpgs/Pangolin.jpg';\nimport noviceImg from './jpgs/pic4767592.jpg';\n// import sageImg from './jpgs/Essence.jpg';\nimport { Header, Subheader, Content, CharacterBox} from './components/components.js';\n// import { useDrag } from 'react-dnd';\n// import { ItemTypes } from './Constants';\nimport Board from './components/Board.js';\nimport styles from \"./styles.module.css\";\n\nconst useLevelUpScreen = ({ morphRef, morphedRef }) => {\n  const [selected, setSelected] = React.useState([])\n  const [morphing, setMorphing] = React.useState(false)\n  const [morphed, setMorphed] = React.useState(false)\n  const [ready, setReady] = React.useState(false)\n  const [shutdown, setShutdown] = React.useState(false)\n\n  const onSelect = (type) => (e) => {\n    setSelected((prevSelected) => {\n      if (prevSelected.includes(type)) {\n        return prevSelected.filter((t) => t !== type)\n      }\n      return [...prevSelected, type]\n    })\n    scrollToComponent(morphRef.current, {\n      offset: 80,\n      align: 'bottom',\n      duration: 1000,\n    })\n  }\n\n  const onMorph = () => {\n    setMorphing(true)\n    setTimeout(() => {\n      setMorphing(false)\n      setMorphed(true)\n    }, 1500)\n  }\n\n  React.useEffect(() => {\n    if (morphed && !ready) {\n      scrollToComponent(morphedRef.current, {\n        offset: 80,\n        align: 'middle',\n        duration: 1000,\n      })\n      setTimeout(() => {\n        setReady(true)\n      }, 2000)\n    }\n  }, [morphed, morphedRef, ready])\n\n  React.useEffect(() => {\n    if (ready && !shutdown) {\n      setTimeout(() => {\n        setShutdown(true)}, 2000)\n    }\n  }, [ready, shutdown])\n\n  return {\n    selected,\n    onSelect,\n    morphed,\n    morphing,\n    onMorph,\n    ready,\n    shutdown,\n  }\n\n  \n}\n//if selected: HoneyBadger && \n\nconst characterSelections = [\n  { type: 'Red Panda', src: RedPanda },\n  { type: 'Sloth', src: Sloth },\n  { type: 'Fennec Fox', src: FennecFox },\n  { type: 'Pangolin', src: Pangolin },\n  { type: 'Honey Badger', src: HoneyBadger },]\n//if Red Panda Special = Bones\n//if Honey Badger Special = Honey\n// if Sloth Special = Herbs\n// if Fox Special = Seeds\n// if Pangolan\n\n\nconst charSelectionMapper = characterSelections.reduce(\n  (acc, { type, src }) => ({\n    ...acc,\n    [type]: src,\n  }),\n  {},\n)\n\nconst CharacterSelectScreen = (props) => {\n//this constructor is an example of session storage\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     player: {\n  //       shields: sessionStorage.getItem(\"playerShields\"),\n  //     }\n\n// function Specials(){\n//  if( isSelected={selected === props.RedPanda}\n//   return all Bones\n//   )\n// }\n\n  const morphRef = React.createRef()\n  const morphedRef = React.createRef()\n  const {\n    selected,\n    onSelect,\n    morphing,\n    morphed,\n    onMorph,\n    ready,\n    shutdown,\n  } = useLevelUpScreen({\n    morphRef,\n    morphedRef,\n  })\n\n//if  imgPros is Honey Badgerm you may take all Honey\n//if Red Panda. take all the bones\n//Sloth Herbs\n//Fennec seeds\n//Pangolin Mushrooms\n\n  return (\n    <div>\n    <div\n      className={cx(styles.root, {\n      [styles.shutdown]: shutdown,\n        })}\n        >\n      <Header>\n        You are a <em>Cub</em>\n      </Header>\n      <Content>\n      <CharacterBox\n          style={{ width: 180, height: 230 }}\n          imgProps={{ src: noviceImg }}\n          disableFlashing\n        />\n    </Content>\n    <Subheader>Welcome to the Animalchemist Mojo Magic Dojo!</Subheader>\n    <div style={{ margin: '25px auto' }}>\n      <Header>Select Your Alchemist!</Header>\n      <Subheader>Each alchemist has mastered an ingredient.</Subheader>\n      <Content display=\"container\">\n          {characterSelections.map((props, index) => (\n            <CharacterBox\n              key={`char_selection_${index}`}\n              onClick={onSelect(props.type)}\n              isSelected={selected === props.type}\n              {...props}\n            \n            />\n          ))}\n        </Content>\n      <div\n        ref={morphRef}\n        className={cx(styles.morph, {\n          [styles.hidden]: !selected.length,\n        })}\n      >\n        <MdKeyboardTab className={styles.morphArrow} />\n        <button\n          ref={morphRef}\n          name=\"morph\"\n          type=\"button\"\n          className={styles.morph}\n          style={{ opacity: morphed ? '0.4' : 1 , marginTop:30}}\n          onClick={onMorph}\n          disabled={morphed}\n        >\n          {morphing ? 'Gathering Ingredients...' : morphed ? 'Morphed' : 'Start Game'}\n        </button>\n        <MdKeyboardTab className={styles.morphArrowFlipped} />\n      </div>\n      <div\n        className={cx({\n          [styles.morphed]: morphed,\n          [styles.hidden]: !morphed,\n        })}\n      >\n       {/* <Header>Congratulations!</Header> */}\n        <Content>\n        {/* Load Screen Character */}\n        <CharacterBox\n          \n            ref={morphedRef}\n            type={selected}\n            headerProps={{ className: styles.unique }}\n            imgProps={{ src: charSelectionMapper[selected] }}\n          style={{maxWidth:200, marginTop:-10}}\n          />\n        </Content>\n        <Subheader\n        style={{marginBottom:-80}}\n        >\n          You have morphed into a <em>Sage</em>\n        </Subheader>\n      </div>\n\n    \n      <div\n        className={cx(styles.next, {\n          [styles.hidden]: !ready,\n        })}\n        >\n         <div style={{float:\"right\", marginTop:60, marginBottom:-60, position:\"relative\"}}>\n          <RingLoader size={60} color=\"rgb(213, 202, 255)\" loading />\n          <p>Studying...</p>\n        </div>\n        </div>\n  </div>\n  </div>\n{/* header image */}\n  <CharacterBox\n    style={{ width: 100, height: 150, marginTop:-110}}\n            ref={morphedRef}\n            type={selected}\n            headerProps={{ className: styles.unique }}\n            imgProps={{ src: charSelectionMapper[selected] }}\n          />\n\n  </div>\n)\n}\nexport default CharacterSelectScreen;","import React from 'react';\nimport cx from 'classnames';\nimport { RingLoader } from '../node_modules/react-spinners';\nimport { MdKeyboardTab } from '../node_modules/react-icons/md/index.js'\nimport scrollToComponent from '../node_modules/react-scroll-to-component'\nimport RedPanda from './jpgs/RedPanda.jpg';\nimport Sloth from './jpgs/Sloth.jpg';\nimport FennecFox from './jpgs/FennecFox.jpg';\nimport HoneyBadger from './jpgs/HoneyBadger.jpg';\nimport Pangolin from './jpgs/Pangolin.jpg';\nimport noviceImg from './jpgs/pic4767592.jpg';\n// import sageImg from './jpgs/Essence.jpg';\nimport { Header, Subheader, Content, CharacterBox} from './components/components.js';\n// import { useDrag } from 'react-dnd';\n// import { ItemTypes } from './Constants';\nimport Board from './components/Board.js';\nimport styles from \"./styles.module.css\";\nimport CharacterSelectScreen from \"./CharacterSelectScreen\";\n\n//if selected: HoneyBadger && \n\n\n\nconst App = (props) => {\n//this constructor is an example of session storage\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     player: {\n  //       shields: sessionStorage.getItem(\"playerShields\"),\n  //     }\n\n// function Specials(){\n//  if( isSelected={selected === props.RedPanda}\n//   return all Bones\n//   )\n// }\n\n\n//if  imgPros is Honey Badgerm you may take all Honey\n//if Red Panda. take all the bones\n//Sloth Herbs\n//Fennec seeds\n//Pangolin Mushrooms\n\n  return (\n    <div>\n<CharacterSelectScreen/>       \n  <Board\n  // countHoney={this.state.countHoney}\n  />\n  </div>\n)\n}\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister();"],"sourceRoot":""}